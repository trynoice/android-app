name: Android
on:
  push:
    branches:
      - main
      - "[0-9]+.[0-9]+.x"
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
    paths:
      - ".github/workflows/android.yaml"
      - "app/**"
      - "gradle/**"
      - "**.gradle"
      - "gradle.properties"
      - "gradlew"
      - "gradlew.bat"
  pull_request:
    branches:
      - main
      - "[0-9]+.[0-9]+.x"
    paths:
      - ".github/workflows/android.yaml"
      - "app/**"
      - "gradle/**"
      - "**.gradle"
      - "gradle.properties"
      - "gradlew"
      - "gradlew.bat"

jobs:
  validate-gradle-wrapper:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1

  unit-tests:
    name: Unit Tests
    needs: [validate-gradle-wrapper]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 10
      - run: ./gradlew testCoverage --no-daemon --stacktrace
      - uses: codecov/codecov-action@v1
        with:
          flags: android

  ui-tests:
    name: UI tests
    needs: [validate-gradle-wrapper]
    runs-on: macos-latest
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - android: 28
            target: default
            gradleTask: createFdroidDebugCoverageReport
          - android: 28
            target: google_apis
            gradleTask: createPlaystoreDebugCoverageReport
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 10
      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.android }}
          target: ${{ matrix.target }}
          arch: x86_64
          script: ./scripts/run-ui-tests.sh ${{ matrix.gradleTask }}
          emulator-options: >-
            -no-boot-anim -no-audio -no-snapshot -no-window -camera-back none
            -camera-front none -gpu swiftshader_indirect -memory 3583
      - uses: codecov/codecov-action@v1
        with:
          flags: android

  play-store-release:
    name: Play Store Release
    if: github.repository == 'ashutoshgngwr/noice' && github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: [unit-tests, ui-tests]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - uses: actions/setup-java@v1
        with:
          java-version: 10
      - run: |
          echo "$SERVICE_ACCOUNT_KEY" > service-account-key.json
          echo "$JKS_STORE" | base64 --decode > keystore.jks
        env:
          SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          JKS_STORE: ${{ secrets.JKS_STORE }}
      - run: bundle install && bundle exec fastlane beta
        env:
          STORE_PASSWORD: ${{ secrets.JKS_STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.JKS_ALIAS }}
          KEY_PASSWORD: ${{ secrets.JKS_ALIAS_PASSWORD }}
      - if: ${{ always() }}
        run: rm -f service-account-key.json keystore.jks

  github-release:
    name: GitHub Release
    if: github.repository == 'ashutoshgngwr/noice' && github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: [unit-tests, ui-tests]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      PLAYSTORE_APK: noice-playstore.apk
      PLAYSTORE_MAPPING: noice-playstore-mapping.txt
      FDROID_APK: noice-fdroid.apk
      FDROID_MAPPING: noice-fdroid-mapping.txt
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 10
      - run: |
          echo "$JKS_STORE" | base64 --decode > keystore.jks
          ./gradlew assemblePlaystoreRelease --stacktrace

          # remove non-free deps from the f-droid build but keep signingConfig
          sed -i -r -e 's@^(.*)signingConfig(.*)\/\/.*$@\1signingConfig\2@' app/build.gradle
          sed -i -e '/sed:fdroid-build:remove/d' build.gradle app/build.gradle
          ./gradlew assembleFdroidRelease --stacktrace

          # move files here and there.
          mv -f app/build/outputs/apk/playstore/release/app-playstore-release.apk "$PLAYSTORE_APK"
          mv -f app/build/outputs/mapping/playstoreRelease/mapping.txt "$PLAYSTORE_MAPPING"
          mv -f app/build/outputs/apk/fdroid/release/app-fdroid-release.apk "$FDROID_APK"
          mv -f app/build/outputs/mapping/fdroidRelease/mapping.txt "$FDROID_MAPPING"
        env:
          JKS_STORE: ${{ secrets.JKS_STORE }}
          STORE_PASSWORD: ${{ secrets.JKS_STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.JKS_ALIAS }}
          KEY_PASSWORD: ${{ secrets.JKS_ALIAS_PASSWORD }}
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.FDROID_APK }}
            ${{ env.FDROID_MAPPING }}
            ${{ env.PLAYSTORE_APK }}
            ${{ env.PLAYSTORE_MAPPING }}
      - if: ${{ always() }}
        run: rm -f keystore.jks
